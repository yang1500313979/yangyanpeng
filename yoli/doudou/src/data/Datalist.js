/**
 * Created by Yoli on 15/11/10.
 * 存放数据
 */
var Constant = {
    MAP_WIDHT:13,
    MAP_HEIGH:20,
    BIRD_WIDHT:37,
    BIRD_HEIGH:35,
    UP:4,
    DOWN:1,
    LEFT:2,
    RIGHT:3,
    STOP:0,
    ENEMY:[
        {x:4,y:11},
        {x:5,y:11},
        {x:6,y:11},
        {x:7,y:11}
    ],
    POINT:[
        {col:10,row:14},
        {col:11,row:14},
        {col:5,row:1},
        {col:6,row:7}
    ],
    aLevels:[
        [
            [1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,2,0,1,1,0,1,1,0,1,1,2,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,2,1,1,1,0,0,1,1,1,1,1,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,1,1,1,1,0,0,1,1,1,1,2,1],
            [1,2,0,0,0,0,0,0,0,0,0,2,1],
            [1,2,0,1,1,1,1,1,1,1,0,2,1],
            [1,2,0,2,2,2,2,2,2,2,2,2,1],
            [1,2,0,1,1,1,0,1,1,1,0,2,1],
            [1,2,0,1,0,0,0,0,0,0,0,2,1],
            [1,2,0,1,1,1,0,1,1,1,0,2,1],
            [1,2,0,2,0,2,2,0,0,0,0,2,1],
            [1,2,1,2,1,2,2,1,0,1,0,2,1],
            [1,2,1,2,1,2,2,1,0,1,0,2,1],
            [1,2,1,2,1,2,2,1,0,1,0,2,1],
            [1,2,1,2,1,2,2,1,0,1,0,2,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1]
        ],
        [
            [1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,0,1,1,1,0,0,0,0,0,0,0,1],
            [1,0,0,0,1,0,0,1,1,1,1,1,1],
            [1,0,1,1,1,0,0,0,0,0,0,0,1],
            [1,0,1,2,2,0,0,1,1,1,1,0,1],
            [1,0,1,2,2,1,0,1,2,2,1,0,1],
            [1,0,1,2,2,1,0,1,2,2,1,0,1],
            [1,0,1,2,2,1,0,0,2,2,0,0,1],
            [1,0,1,2,2,1,0,1,2,2,1,0,1],
            [1,0,1,2,2,1,0,1,2,2,1,0,1],
            [1,0,0,2,2,1,0,1,1,1,1,0,1],
            [1,0,0,2,2,1,0,0,0,0,0,0,1],
            [1,0,1,1,1,1,1,0,0,1,1,0,1],
            [1,2,2,2,2,0,0,0,0,0,0,0,1],
            [1,1,1,1,1,1,1,0,0,1,1,0,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,0,1,1,0,1,1,0,0,1,1,0,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1]
        ],
        [
            [1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,1,0,0,0,0,0,0,0,0,0,0,1],
            [1,0,2,2,2,2,2,2,2,2,2,0,1],
            [1,0,0,1,1,1,1,1,1,1,2,0,1],
            [1,0,0,2,2,2,2,2,2,1,2,0,1],
            [1,0,0,2,1,2,1,2,2,1,2,0,1],
            [1,0,0,2,1,2,1,2,2,1,2,0,1],
            [1,0,0,2,2,2,2,2,2,1,2,0,1],
            [1,0,1,1,1,1,1,1,1,1,2,0,1],
            [1,0,1,2,2,2,2,2,2,2,2,0,1],
            [1,0,1,2,2,1,1,1,2,0,0,0,1],
            [1,0,1,2,2,2,2,2,2,0,0,0,1],
            [1,0,1,2,2,1,1,1,2,0,0,0,1],
            [1,0,1,2,2,2,2,2,2,0,0,0,1],
            [1,0,1,1,1,1,1,1,1,0,0,0,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,1],
            [1,0,1,1,1,0,0,1,1,0,0,0,1],
            [1,0,1,1,1,0,0,1,1,0,0,0,1],
            [1,0,0,0,0,0,0,1,1,0,0,0,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1]
        ],
        [
            [1,1,1,1,1,1,1,1,1,1,1,1,1],
            [1,2,2,2,2,2,2,2,2,2,2,2,1],
            [1,0,1,1,1,1,0,1,1,1,1,0,1],
            [1,0,2,2,2,2,2,2,2,2,2,0,1],
            [1,0,1,1,1,0,1,1,0,1,1,0,1],
            [1,0,1,1,1,0,1,1,0,1,1,0,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,1],
            [1,0,0,1,1,1,1,1,1,1,0,0,1],
            [1,0,0,2,2,2,2,2,2,1,0,0,1],
            [1,1,0,2,2,2,2,2,2,1,0,0,1],
            [1,0,0,2,2,2,2,2,2,1,0,0,1],
            [1,0,0,2,2,2,2,2,2,1,0,0,1],
            [1,0,0,1,1,1,1,1,1,1,0,0,1],
            [1,0,0,1,2,2,2,2,2,1,0,0,1],
            [1,0,0,0,2,2,2,2,2,1,0,0,1],
            [1,1,0,1,2,2,2,2,2,1,0,0,1],
            [1,0,0,1,2,2,2,2,2,0,0,1,1],
            [1,0,0,1,1,1,1,1,1,1,0,0,1],
            [1,0,0,0,0,0,0,0,0,0,0,0,1],
            [1,1,1,1,1,1,1,1,1,1,1,1,1]
        ]
    ]
};

var Variables = {
    bDebug:true,
    bFirst:true,
    nScore:0,
    level:0
};


fCirAndCirCollision = function (pool,player) {
    for(var i in pool){
        var xDist = player.x-pool[i].x;
        var yDist = player.y-pool[i].y;
        var spDist = xDist*xDist+yDist*yDist;
        var dist = player.getBoundingBox().width/2+pool[i].getBoundingBox().width/2;
        if(spDist<dist*dist){
            return i;
        }
    }
    return false;
};

